import{_ as h,G as _,J as u,o as m,c as p,w as a,a as s,Y as g,L as l,M as d,e as C,S as x,R as P,P as y,a1 as $,ab as k,K as v,T as V,ac as L,a6 as T,ae as O,ad as b}from"./index-B0mB8IR5.js";import{V as w,a as N}from"./VRow-ahnzIGti.js";import{V as B}from"./VContainer-BmqwMD6F.js";import{V as D}from"./VDialog-CUUY5Aqm.js";import{V as R}from"./VSpacer-DF11seoR.js";/* empty css              */const S={data(){return{totpList:[],loading:!1,renameDialog:!1,deleteDialog:!1,selectedTOTPId:null,newName:"",renameError:"",nameRules:[t=>t?!0:"Name is required.",t=>(t==null?void 0:t.length)<=100?!0:"Name must be less than 10 characters."]}},setup(){_({title:"验证器"})},methods:{async fetchTOTPList(){this.loading=!0;try{const t=await u.get("/account/totp/list").data;t.status==="success"?this.totpList=t.data.list:this.$toast.add({severity:"error",summary:"错误",detail:t.message,life:3e3})}catch(t){this.$toast.add({severity:"error",summary:"错误",detail:t.message,life:3e3})}finally{this.loading=!1}},async renameTOTP(t,e){if(e==""){this.renameError="名称不能为空";return}try{const i=await u.post("/account/totp/rename",{totp_id:t,name:e}).data;i.status==="success"?(this.fetchTOTPList(),this.$toast.add({severity:"success",summary:"成功",detail:"验证器重命名成功",life:3e3})):this.$toast.add({severity:"error",summary:"错误",detail:i.message,life:3e3})}catch(i){this.$toast.add({severity:"error",summary:"错误",detail:i.message,life:3e3})}},async deleteTOTP(t){try{const e=await u.post("/account/totp/delete",{totp_id:t}).data;e.status==="success"?(this.fetchTOTPList(),this.$toast.add({severity:"success",summary:"成功",detail:"验证器删除成功",life:3e3})):this.$toast.add({severity:"error",summary:"错误",detail:e.message,life:3e3})}catch(e){this.$toast.add({severity:"error",summary:"错误",detail:e.message,life:3e3})}}},mounted(){this.fetchTOTPList()}},E={class:"headline"};function I(t,e,i,q,c,f){return m(),p(B,null,{default:a(()=>[s(d,{to:"./totp/add",color:"primary",class:"mb-4"},{default:a(()=>[s(g,{left:""},{default:a(()=>e[0]||(e[0]=[l("mdi-plus")])),_:1}),e[1]||(e[1]=l("新的验证器 "))]),_:1}),s(w,null,{default:a(()=>[(m(!0),C(P,null,x(c.totpList,r=>(m(),p(N,{key:r.id,cols:"12",md:"4"},{default:a(()=>[s(D,{"max-width":"500"},{activator:a(({props:n})=>[s(y,$({border:"",ref_for:!0},n),{default:a(()=>[s(k,null,{default:a(()=>[v("span",E,V(r.name),1)]),_:2},1024),s(L,null,{default:a(()=>[l(V(r.status),1)]),_:2},1024),s(T,null,{default:a(()=>e[2]||(e[2]=[l(" 点击打开管理 ")])),_:1})]),_:2},1040)]),default:a(({isActive:n})=>[s(y,{title:r.name,border:""},{default:a(()=>[s(T,null,{default:a(()=>[s(O,{modelValue:r.name,"onUpdate:modelValue":o=>r.name=o,counter:100,rules:c.nameRules,label:"验证器名称",required:""},null,8,["modelValue","onUpdate:modelValue","rules"]),s(d,{color:"primary",onClick:o=>f.renameTOTP(r.id,r.name)},{default:a(()=>e[3]||(e[3]=[l("重命名")])),_:2},1032,["onClick"])]),_:2},1024),s(b,null,{default:a(()=>[s(d,{color:"error",variant:"text",onClick:o=>f.deleteTOTP(r.id),border:""},{default:a(()=>e[4]||(e[4]=[l("删除")])),_:2},1032,["onClick"]),s(R),s(d,{text:"关闭",onClick:o=>n.value=!1},null,8,["onClick"])]),_:2},1024)]),_:2},1032,["title"])]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})}const K=h(S,[["render",I]]);export{K as default};
