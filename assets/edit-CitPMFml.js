import{_ as N}from"./MonacoEditorComponent-BbPRZkrI.js";import{_ as z,c as y,o as m,e as s,Y as f,N as a,Q as A,R as x,f as j,S as T,L as d,O as w,X as C,a4 as _,i as h,aJ as U,P as J,aK as P,ad as V,F as k,U as L,ae as v,az as R,af as I,m as $,Z as B,aL as q,a5 as K,W as b,a9 as D,a3 as S,aF as W,aB as F,aE as O,aA as H,aM as X,aC as Q,a1 as p}from"./index-BtdOAlf3.js";import{V as M}from"./VSpacer-BiURwLiC.js";import{V as Y}from"./VSelect-BaTsaZ79.js";import{V as E}from"./VSheet-BUJu4WGD.js";import{V as Z}from"./VTextarea-9IHUMTAQ.js";import"https://static.geetest.com/v4/gt4.js";import"./VCheckboxBtn-CYbMgu1n.js";import"./VSelectionControl-BBOkt1Ow.js";const G={name:"ProjectEditor",components:{MonacoEditorComponent:N},data(){return{project:null,fileContent:null,fileSha256:null,branches:[],currentBranch:"main",commits:[],accessFileToken:"",loading:!0,loadingMessage:"加载项目信息...",codeChanged:!1,errorMessage:"",showSaveDialog:!1,showHistoryDialog:!1,showHistorySidebar:!1,commitMessage:"",commitDescription:"",loadingHistory:!1,editorOptions:{theme:"vs-dark",language:"javascript",fontSize:14,tabSize:2,minimap:{enabled:!0},scrollBeyondLastLine:!1,automaticLayout:!0,wordWrap:"on",lineNumbers:"on",glyphMargin:!0,folding:!0,lineDecorationsWidth:10,lineNumbersMinChars:3},showLanguageDialog:!1,languageSearch:"",availableLanguages:[],monacoInstance:null,editorInstance:null}},computed:{projectId(){return this.$route.query.id},projectNamespace(){const o=this.$route.params.username||this.$route.query.username,e=this.$route.params.projectname||this.$route.query.projectname;return o&&e?`${o}/${e}`:null},filteredLanguages(){if(!this.languageSearch)return this.availableLanguages;const o=this.languageSearch.toLowerCase();return this.availableLanguages.filter(e=>e.id.toLowerCase().includes(o)||e.aliases&&e.aliases.some(r=>r.toLowerCase().includes(o)))}},watch:{currentBranch:async function(){this.showHistorySidebar&&await this.loadCommitHistory()},project:async function(o){o&&o.id&&await this.loadCommitHistory()},showLanguageDialog(o){o?this.$nextTick(()=>{var e;(e=this.$refs.languageSearchInput)==null||e.focus()}):this.languageSearch=""}},mounted(){this.loadProject()},methods:{async loadProject(){var o;try{this.loading=!0,this.loadingMessage="加载项目信息...";let e;if(this.projectId)console.log("通过ID加载项目:",this.projectId),e=await p.get(`/project/id/${this.projectId}`);else if(this.projectNamespace){console.log("通过命名空间加载项目:",this.projectNamespace);const[r,c]=this.projectNamespace.split("/");e=await p.get(`/project/namespace/${r}/${c}`)}else throw new Error("未提供项目ID或命名空间");if(console.log("项目加载响应:",e.data),e.data.status==="success"||e.data.id){if(this.project=e.data.data||e.data,!this.project||!this.project.id)throw new Error("项目数据无效: "+JSON.stringify(this.project));await this.loadBranches(),await this.loadLatestCommit()}else throw new Error(e.data.message||"加载项目失败: 服务器未返回有效数据")}catch(e){console.error("加载项目失败:",e);const r=e.response?`服务器错误 (${e.response.status}): ${((o=e.response.data)==null?void 0:o.message)||"未知错误"}`:e.message||"网络错误或服务器无响应";this.loadingMessage=`加载失败: ${r}`,this.errorMessage=r,this.loading=!1}},async loadBranches(){var o;try{this.loadingMessage="加载分支信息...",console.log("加载分支, 项目ID:",this.project.id);const e=await p.get(`/project/branches?projectid=${this.project.id}`);if(console.log("分支加载响应:",e.data),e.data.status==="success")if(this.branches=e.data.data||[],this.branches.length>0)this.currentBranch=this.branches[0].name;else throw new Error("项目没有任何分支");else throw new Error(e.data.message||"加载分支失败: 服务器未返回有效数据")}catch(e){console.error("加载分支失败:",e);const r=e.response?`服务器错误 (${e.response.status}): ${((o=e.response.data)==null?void 0:o.message)||"未知错误"}`:e.message||"网络错误或服务器无响应";this.loadingMessage=`加载分支失败: ${r}`,this.errorMessage=r,this.loading=!1}},async loadLatestCommit(){var o,e,r,c;try{this.loadingMessage="加载最新代码...",console.log("加载最新提交, 项目ID:",this.project.id,"分支:",this.currentBranch);const t=await p.get(`/project/${this.project.id}/${this.currentBranch}/latest`);if(console.log("最新提交响应:",t.data),t.data.status==="success"){if(!t.data.accessFileToken)throw new Error("服务器未返回文件访问令牌");if(this.accessFileToken=t.data.accessFileToken,!t.data.commit)throw new Error("服务器返回的提交数据无效");const l=t.data.commit.commit_file;if(console.log(`获取提交文件: ${l}`),!l){console.log("没有提交文件，创建新文件"),this.fileContent="",this.loading=!1;return}try{const n=await p.get(`/project/files/${l}?accessFileToken=${this.accessFileToken}&content=true`);if(console.log("提交文件响应:",n),n.status===200){let u=n.data;if(!u)console.log("文件内容为空，创建新文件"),this.fileContent="";else{typeof u=="object"&&(u=JSON.stringify(u,null,2)),console.log("获取到文件内容，长度:",u.length),this.fileContent=u,this.fileSha256=l;const i=this.project.name||"file.js";this.editorOptions.language=this.detectLanguage(u,i)}this.loading=!1}else{const u=((o=n.data)==null?void 0:o.message)||"未知错误";console.error(`获取提交文件失败: ${l}`,n.data),this.fileContent="",this.loading=!1}}catch(n){console.error("获取提交文件请求失败:",n),this.fileContent="",this.loading=!1}}else throw new Error(t.data.message||"加载最新提交失败: 服务器未返回有效数据")}catch(t){console.error("加载最新提交失败:",t);const l=t.response?`服务器错误 (${t.response.status}): ${((e=t.response.data)==null?void 0:e.message)||"未知错误"}`:`${t.message||"网络错误或服务器无响应"} [${((c=(r=t.stack)==null?void 0:r.split(`
`)[1])==null?void 0:c.trim())||"未知位置"}]`;this.loadingMessage=`加载最新提交失败: ${l}`,this.errorMessage=l,this.fileContent="",this.loading=!1}},async saveAndCommitCode(){if(this.fileContent===null){alert("文件内容未加载");return}this.showSaveDialog=!0},async saveAndSubmitCommit(){var o,e;if(!this.commitMessage.trim()){alert("请输入提交信息");return}try{this.loading=!0,this.loadingMessage="保存并提交代码...",this.showSaveDialog=!1;let r=this.fileContent,c=!1;try{JSON.parse(r),c=!0,console.log("内容已经是有效的JSON格式")}catch{console.log("内容不是有效的JSON格式，将直接发送"),c=!1}console.log("准备保存文件，内容长度:",r.length);const t=await p.post("/project/savefile?json=false&source=index",c?r:JSON.stringify({index:this.fileContent}),{headers:{"Content-Type":"application/json","X-Project-ID":this.project.id}});if(console.log("保存文件响应:",t.data),t.data.status!=="success")throw new Error(t.data.message||"保存文件失败");if(this.accessFileToken=t.data.accessFileToken,this.fileSha256=t.data.sha256,!this.fileSha256)throw console.error("服务器未返回文件SHA256"),new Error("服务器未返回文件SHA256，无法完成提交");console.log("文件保存成功，使用SHA256:",this.fileSha256),console.log("准备提交代码，分支:",this.currentBranch);const l={branch:this.currentBranch,projectid:this.project.id,accessFileToken:this.accessFileToken,message:this.commitMessage,commit_description:this.commitDescription,commit_file:this.fileSha256};console.log("提交数据:",l);const n=await p.put(`/project/commit/id/${this.project.id}`,l);if(console.log("提交响应:",n.data),n.data.status==="success")this.commitMessage="",this.commitDescription="",this.codeChanged=!1,await this.loadCommitHistory(),alert("代码保存并提交成功"+(c?"":" (已转换为JSON格式)"));else throw new Error(n.data.message||"提交代码失败")}catch(r){console.error("保存并提交代码失败:",r),alert("保存并提交代码失败: "+(((e=(o=r.response)==null?void 0:o.data)==null?void 0:e.message)||r.message||"未知错误"))}finally{this.loading=!1}},async loadCommitHistory(){if(!this.project||!this.project.id){console.error("项目未加载，无法获取提交历史");return}try{this.loadingHistory=!0;const o=await p.get(`/project/commits?projectid=${this.project.id}&branch=${this.currentBranch}`);o.data.status==="success"?(this.commits=o.data.data||[],this.commits=this.commits.map(e=>({...e,hash:e.hash||"unknown",message:e.message||"无提交信息",date:e.date||new Date().toISOString(),author:e.author||{username:"未知用户"}}))):console.error("加载提交历史失败:",o.data.message)}catch(o){console.error("加载提交历史失败:",o)}finally{this.loadingHistory=!1}},async showHistory(){try{await this.loadCommitHistory(),this.showHistoryDialog=!0}catch(o){console.error("显示历史对话框失败:",o),alert("加载提交历史失败: "+(o.message||"未知错误"))}},async toggleHistorySidebar(){this.showHistorySidebar=!this.showHistorySidebar,this.showHistorySidebar&&this.commits.length===0&&await this.loadCommitHistory()},formatCommitInfo(o){var c;if(!o)return"未知提交信息";const e=((c=o.author)==null?void 0:c.username)||"未知用户",r=o.date?this.formatDate(o.date):"未知时间";return`${e} · ${r}`},async viewCommit(o){var e,r,c,t;if(!o||!o.hash){alert("无效的提交信息");return}try{this.loading=!0,this.loadingMessage="加载提交详情...";const l=await p.get(`/project/commit?projectid=${this.project.id}&commitid=${o.hash}`);if(l.data.status==="success"){this.accessFileToken=l.data.accessFileToken;const n=l.data.commit.commit_file;if(console.log(`获取提交文件: ${n}`),!n){console.log("没有提交文件，创建空文件"),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1;return}try{const u=await p.get(`/project/files/${n}?accessFileToken=${this.accessFileToken}&content=true`);if(u.status===200){let i=u.data;if(!i)console.log("文件内容为空，创建新文件"),this.fileContent="";else{typeof i=="object"&&(i=JSON.stringify(i,null,2)),console.log("获取到文件内容，长度:",i.length),this.fileContent=i,this.fileSha256=n;const g=this.project.name||"file.js";this.editorOptions.language=this.detectLanguage(i,g)}this.showHistoryDialog=!1,this.loading=!1}else{const i=((e=u.data)==null?void 0:e.message)||"未知错误";console.error(`获取提交文件失败: ${n}`,u.data),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1}}catch(u){console.error("获取提交文件请求失败:",u),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1}}else throw new Error(l.data.message||"加载提交详情失败")}catch(l){console.error("加载提交详情失败:",l);const n=l.response?`服务器错误 (${l.response.status}): ${((r=l.response.data)==null?void 0:r.message)||"未知错误"}`:`${l.message||"网络错误或服务器无响应"} [${((t=(c=l.stack)==null?void 0:c.split(`
`)[1])==null?void 0:t.trim())||"未知位置"}]`;alert("加载提交详情失败: "+n),this.loading=!1}},async restoreCommit(o){var r,c;if(!o||!o.hash){alert("无效的提交信息");return}const e=o.hash.substring(0,7);if(confirm(`确定要恢复到提交 ${e} 的状态吗？`))try{this.loading=!0,this.loadingMessage="恢复提交...",await this.viewCommit(o);const t=await p.put(`/project/commit/id/${this.project.id}`,{branch:this.currentBranch,projectid:this.project.id,accessFileToken:this.accessFileToken,message:`恢复到提交 ${e}`,commit_description:`恢复到提交 ${o.hash}，原提交信息: ${o.message||"无提交信息"}`,commit_file:this.fileSha256});if(t.data.status==="success")alert("代码恢复成功"),await this.loadCommitHistory();else throw new Error(t.data.message||"恢复代码失败")}catch(t){console.error("恢复代码失败:",t),alert("恢复代码失败: "+(((c=(r=t.response)==null?void 0:r.data)==null?void 0:c.message)||t.message||"未知错误"))}finally{this.loading=!1}},async switchBranch(){this.codeChanged?confirm("您有未保存的更改，是否切换分支？")?(await this.loadLatestCommit(),this.codeChanged=!1):this.currentBranch=this.branches.find(o=>o.name===this.currentBranch).name:await this.loadLatestCommit()},goToProjectPage(){this.project&&this.$router.push(`/${this.project.author.username}/${this.project.name}`)},formatDate(o){return new Date(o).toLocaleString()},async retryLoading(){this.errorMessage="",this.loading=!0,this.loadingMessage="重新加载项目...";try{await this.loadProject()}catch(o){this.errorMessage=o.message||"加载失败，请稍后再试"}},handleMonacoReady({monaco:o,editor:e,availableLanguages:r}){var c;if(console.log("Monaco editor ready"),this.monacoInstance=o,this.editorInstance=e,this.availableLanguages=r,(c=this.project)!=null&&c.type){const t=this.project.type.split("-")[0].toLowerCase(),l=this.availableLanguages.find(n=>n.id===t);l&&(console.log("根据项目类型设置语言:",l.id),this.editorOptions.language=l.id,this.editorInstance.getModel()&&this.monacoInstance.editor.setModelLanguage(this.editorInstance.getModel(),l.id))}},detectLanguage(o,e){var r,c;if((r=this.project)!=null&&r.type&&((c=this.availableLanguages)==null?void 0:c.length)>0){const t=this.project.type.split("-")[0].toLowerCase(),l=this.availableLanguages.find(n=>n.id===t);if(l)return l.id}try{return JSON.parse(o),"json"}catch{if(e){const l=e.split(".").pop().toLowerCase();return{js:"javascript",ts:"typescript",html:"html",css:"css",scss:"scss",less:"less",vue:"html",json:"json",md:"markdown",py:"python",java:"java",c:"c",cpp:"cpp",cs:"csharp",go:"go",php:"php",rb:"ruby",rs:"rust",sh:"shell",sql:"sql",xml:"xml",yaml:"yaml",yml:"yaml"}[l]||"plaintext"}}return"plaintext"},selectLanguage(o){if(this.monacoInstance&&this.editorInstance){const e=this.editorInstance.getModel();e&&(this.monacoInstance.editor.setModelLanguage(e,o),this.editorOptions.language=o,this.showLanguageDialog=!1)}}}},ee={key:0},te={class:"text-caption"},se={class:"text-center"},ae={key:1,class:"text-body-2"},oe={key:1,style:{height:"100%!important",width:"100%!important"}},ie={class:"d-flex"},le={class:"text-body-1 mt-4"};function re(o,e,r,c,t,l){var u;const n=N;return m(),y(k,null,[s(U,{class:"editor-app-bar",density:"compact",flat:""},{default:a(()=>[s(A,{align:"center","no-gutters":""},{default:a(()=>[s(x,{class:"mr-4",cols:"auto"},{default:a(()=>[t.project?(m(),y("div",ee,[s(T,{class:"mr-2",color:"primary",size:"small"},{default:a(()=>[s(w,{size:"small",start:""},{default:a(()=>e[16]||(e[16]=[d("mdi-source-repository",-1)])),_:1,__:[16]}),d(" "+C(t.project.title),1)]),_:1}),j("span",te,C(t.project.author.username)+"/"+C(t.project.name),1)])):(m(),f(_,{key:1,indeterminate:"",size:"20",width:"2"}))]),_:1}),s(M),s(x,{cols:"auto"},{default:a(()=>[s(Y,{modelValue:t.currentBranch,"onUpdate:modelValue":[e[0]||(e[0]=i=>t.currentBranch=i),l.switchBranch],items:t.branches.map(i=>i.name),class:"branch-selector",density:"compact","hide-details":"","prepend-inner-icon":"mdi-source-branch",style:{"max-width":"150px"},variant:"outlined"},null,8,["modelValue","items","onUpdate:modelValue"])]),_:1}),s(x,{class:"d-flex",cols:"auto"},{default:a(()=>[s(h,{class:"ml-2",color:"info","prepend-icon":"mdi-code-tags",size:"small",variant:"text",onClick:e[1]||(e[1]=i=>t.showLanguageDialog=!0)},{default:a(()=>[d(C(t.editorOptions.language),1)]),_:1}),s(h,{class:"ml-2",color:"success","prepend-icon":"mdi-content-save",size:"small",variant:"text",onClick:l.saveAndCommitCode},{default:a(()=>e[17]||(e[17]=[d(" 保存 ",-1)])),_:1,__:[17]},8,["onClick"]),s(h,{class:"ml-2",disabled:"","prepend-icon":"mdi-history",size:"small",variant:"text",onClick:l.toggleHistorySidebar},{default:a(()=>e[18]||(e[18]=[d(" 历史 ",-1)])),_:1,__:[18]},8,["onClick"]),s(h,{class:"ml-2","prepend-icon":"mdi-arrow-left",size:"small",variant:"text",onClick:l.goToProjectPage},{default:a(()=>e[19]||(e[19]=[d(" 项目页面 ",-1)])),_:1,__:[19]},8,["onClick"])]),_:1})]),_:1})]),_:1}),s(q,{modelValue:t.showHistorySidebar,"onUpdate:modelValue":e[3]||(e[3]=i=>t.showHistorySidebar=i),border:"",location:"left"},{default:a(()=>[s(J,{density:"compact"},{default:a(()=>[s(P,{class:"text-subtitle-1"},{default:a(()=>e[20]||(e[20]=[d("提交历史",-1)])),_:1,__:[20]}),s(M),s(h,{icon:"",size:"small",onClick:e[2]||(e[2]=i=>t.showHistorySidebar=!1)},{default:a(()=>[s(w,null,{default:a(()=>e[21]||(e[21]=[d("mdi-close",-1)])),_:1,__:[21]})]),_:1})]),_:1}),t.commits.length>0?(m(),f(V,{key:0},{default:a(()=>[(m(!0),y(k,null,L(t.commits,i=>(m(),f(v,{key:i.hash,subtitle:l.formatCommitInfo(i),title:i.message||"无提交信息",lines:"two",onClick:g=>l.viewCommit(i)},{prepend:a(()=>[s(B,{size:"36"},{default:a(()=>[s(w,null,{default:a(()=>e[22]||(e[22]=[d("mdi-source-commit",-1)])),_:1,__:[22]})]),_:1})]),append:a(()=>[s(R,{location:"bottom"},{activator:a(({props:g})=>[s(h,$({icon:"",size:"small"},{ref_for:!0},g),{default:a(()=>[s(w,null,{default:a(()=>e[23]||(e[23]=[d("mdi-dots-vertical",-1)])),_:1,__:[23]})]),_:2},1040)]),default:a(()=>[s(V,null,{default:a(()=>[s(v,{onClick:g=>l.viewCommit(i)},{default:a(()=>[s(I,null,{default:a(()=>e[24]||(e[24]=[d("查看",-1)])),_:1,__:[24]})]),_:2},1032,["onClick"]),s(v,{onClick:g=>l.restoreCommit(i)},{default:a(()=>[s(I,null,{default:a(()=>e[25]||(e[25]=[d("恢复",-1)])),_:1,__:[25]})]),_:2},1032,["onClick"])]),_:2},1024)]),_:2},1024)]),_:2},1032,["subtitle","title","onClick"]))),128))]),_:1})):(m(),f(E,{key:1,class:"d-flex align-center justify-center fill-height"},{default:a(()=>[j("div",se,[t.loadingHistory?(m(),f(_,{key:0,indeterminate:""})):(m(),y("p",ae,"暂无提交历史"))])]),_:1}))]),_:1},8,["modelValue"]),t.errorMessage?(m(),f(K,{key:0,text:t.errorMessage,class:"ma-4",closable:"",title:"加载错误",type:"error"},{append:a(()=>[s(h,{color:"error",variant:"text",onClick:l.retryLoading},{default:a(()=>e[26]||(e[26]=[d(" 重试 ",-1)])),_:1,__:[26]},8,["onClick"])]),_:1},8,["text"])):t.fileContent!==null?(m(),y("div",oe,[s(n,{modelValue:t.fileContent,"onUpdate:modelValue":e[4]||(e[4]=i=>t.fileContent=i),language:t.editorOptions.language,options:t.editorOptions,"project-type":((u=t.project)==null?void 0:u.type)||"",onChange:e[5]||(e[5]=i=>t.codeChanged=!0),onMonacoReady:l.handleMonacoReady},null,8,["modelValue","language","options","project-type","onMonacoReady"])])):(m(),f(E,{key:2,class:"d-flex align-center justify-center fill-height"},{default:a(()=>[s(_,{color:"primary",indeterminate:""}),e[27]||(e[27]=j("span",{class:"ml-2"},"加载中...",-1))]),_:1,__:[27]})),s(H,{modelValue:t.showSaveDialog,"onUpdate:modelValue":e[9]||(e[9]=i=>t.showSaveDialog=i),"max-width":"600px"},{default:a(()=>[s(b,null,{default:a(()=>[s(D,{class:"text-h5"},{default:a(()=>e[28]||(e[28]=[d(" 保存更改 ",-1)])),_:1,__:[28]}),s(S,null,{default:a(()=>[s(W,null,{default:a(()=>[s(F,{modelValue:t.commitMessage,"onUpdate:modelValue":e[6]||(e[6]=i=>t.commitMessage=i),label:"提交信息",placeholder:"简短描述您的更改",required:"",variant:"outlined"},null,8,["modelValue"]),s(Z,{modelValue:t.commitDescription,"onUpdate:modelValue":e[7]||(e[7]=i=>t.commitDescription=i),label:"详细描述 (可选)",placeholder:"详细描述您的更改",rows:"4",variant:"outlined"},null,8,["modelValue"])]),_:1})]),_:1}),s(O,null,{default:a(()=>[s(M),s(h,{variant:"text",onClick:e[8]||(e[8]=i=>t.showSaveDialog=!1)},{default:a(()=>e[29]||(e[29]=[d(" 取消 ",-1)])),_:1,__:[29]}),s(h,{color:"primary",variant:"flat",onClick:l.saveAndSubmitCommit},{default:a(()=>e[30]||(e[30]=[d(" 保存并提交 ",-1)])),_:1,__:[30]},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(H,{modelValue:t.showHistoryDialog,"onUpdate:modelValue":e[11]||(e[11]=i=>t.showHistoryDialog=i),"max-width":"800px"},{default:a(()=>[s(b,null,{default:a(()=>[s(D,{class:"text-h5"},{default:a(()=>e[31]||(e[31]=[d(" 提交历史 ",-1)])),_:1,__:[31]}),s(S,{class:"pa-0"},{default:a(()=>[s(V,{lines:"two"},{default:a(()=>[(m(!0),y(k,null,L(t.commits,i=>(m(),f(v,{key:i.hash,subtitle:l.formatCommitInfo(i),title:i.message||"无提交信息"},{prepend:a(()=>[s(B,{size:"36"},{default:a(()=>[s(w,null,{default:a(()=>e[32]||(e[32]=[d("mdi-source-commit",-1)])),_:1,__:[32]})]),_:1})]),append:a(()=>[j("div",ie,[s(T,{class:"mr-2 monospace",size:"small",variant:"flat"},{default:a(()=>[d(C(i.hash?i.hash.substring(0,7):"unknown"),1)]),_:2},1024),s(h,{color:"primary",size:"small",variant:"text",onClick:g=>l.viewCommit(i)},{default:a(()=>e[33]||(e[33]=[d(" 查看 ",-1)])),_:2,__:[33]},1032,["onClick"]),s(h,{size:"small",variant:"text",onClick:g=>l.restoreCommit(i)},{default:a(()=>e[34]||(e[34]=[d(" 恢复 ",-1)])),_:2,__:[34]},1032,["onClick"])])]),_:2},1032,["subtitle","title"]))),128))]),_:1})]),_:1}),s(O,null,{default:a(()=>[s(M),s(h,{color:"primary",variant:"text",onClick:e[10]||(e[10]=i=>t.showHistoryDialog=!1)},{default:a(()=>e[35]||(e[35]=[d(" 关闭 ",-1)])),_:1,__:[35]})]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(X,{modelValue:t.loading,"onUpdate:modelValue":e[12]||(e[12]=i=>t.loading=i),class:"align-center justify-center",persistent:""},{default:a(()=>[s(b,{width:"300"},{default:a(()=>[s(S,{class:"text-center pa-4"},{default:a(()=>[s(_,{color:"primary",indeterminate:"",size:"64"}),j("div",le,C(t.loadingMessage),1)]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(H,{modelValue:t.showLanguageDialog,"onUpdate:modelValue":e[15]||(e[15]=i=>t.showLanguageDialog=i),"max-width":"400px"},{default:a(()=>[s(b,{class:"language-dialog"},{default:a(()=>[s(D,{class:"pa-4 pb-0"},{default:a(()=>[s(F,{modelValue:t.languageSearch,"onUpdate:modelValue":e[13]||(e[13]=i=>t.languageSearch=i),ref:"languageSearchInput","append-inner-icon":"mdi-magnify",label:"选择编程语言",placeholder:"搜索语言...",variant:"outlined",density:"compact","hide-details":"",class:"language-search",onKeydown:e[14]||(e[14]=Q(i=>t.showLanguageDialog=!1,["esc"]))},null,8,["modelValue"])]),_:1}),s(S,{class:"pa-2"},{default:a(()=>[s(V,{density:"compact",class:"language-list"},{default:a(()=>[(m(!0),y(k,null,L(l.filteredLanguages,i=>{var g;return m(),f(v,{key:i.id,active:t.editorOptions.language===i.id,title:((g=i.aliases)==null?void 0:g[0])||i.id,subtitle:i.id,class:"language-list-item",onClick:ne=>l.selectLanguage(i.id)},{prepend:a(()=>[s(w,{size:"small",color:t.editorOptions.language===i.id?"primary":void 0},{default:a(()=>e[36]||(e[36]=[d(" mdi-code-braces ",-1)])),_:2,__:[36]},1032,["color"])]),_:2},1032,["active","title","subtitle","onClick"])}),128))]),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"])],64)}const we=z(G,[["render",re]]);export{we as default};
