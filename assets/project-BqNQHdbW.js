import{d as a,l as c}from"./db-CcV7DHa-.js";import{J as s}from"./index-Qi9VjfBV.js";async function y(t){return Array.isArray(t)||(t=[t]),Promise.all(t.map(e=>a.projects.get(Number(e)).then(i=>i||{id:e,cached:!1,title:"未知项目",description:"项目信息未缓存",authorid:0,type:"scratch",licence:"unknow",state:"unknow",view_count:0,time:0,tags:[],source:"unknow"}))).then(e=>t.length===1?e[0]:e)}async function n(t){if(t.id=Number(t.id),await a.projects.get(t.id))return await a.projects.put(t),`项目 ${t.title} 更新成功.`;{const i=await a.projects.add(t);return`项目 ${t.title} 成功缓存. 获取到id为 ${i}`}}async function h(t){try{return Array.isArray(t)||(t=[t]),(await Promise.all(t.map(async i=>await n(i)))).join(`
`)}catch(e){return`添加缓存失败: ${e}`}}async function f(t){try{const e=await a.projects.get(Number(t));return e?(await a.projects.delete(Number(t)),`项目 ${e.title} 删除成功.`):`删除 ${t} 失败: Project not found`}catch(e){return`删除 ${t} 失败: ${e}`}}async function p(t){Array.isArray(t)||(t=[t]);try{return(await Promise.all(t.map(async i=>{const r=await s.get(`/project/${i}`),o={id:r.id,type:r.type,licence:r.licence,authorid:r.authorid,state:r.state,view_count:r.view_count,time:r.time,title:r.title,description:r.description,tags:r.tags,source:r.source};return await n(o)}))).join(`
`)}catch(e){return`刷新失败: ${e}`}}function w(t,e){return Array.isArray(t)||(t=[t]),c(()=>a.projects.where("id").anyOf(t).toArray()).subscribe(e)}function m(t){return c(()=>a.projects.toArray()).subscribe(t)}function d(t){return a.projects.get(Number(t)).then(e=>e||{id:t,title:"未知项目",description:"项目信息未缓存",authorid:0,type:"scratch",licence:"unknow",state:"unknow",view_count:0,time:0,tags:[],source:"unknow"})}async function g(t){const e=await s.get(`/project/${t}`),i={id:e.id,type:e.type,licence:e.licence,authorid:e.authorid,state:e.state,view_count:e.view_count,time:e.time,title:e.title,description:e.description,tags:e.tags,source:e.source};return await n(i),i}export{m as D,y as a,h as b,f as c,g as f,d as g,w as l,p as r};
