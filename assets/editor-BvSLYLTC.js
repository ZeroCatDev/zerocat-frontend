import{_ as I}from"./MonacoEditorComponent-BRBxgeiY.js";import{_ as O,a as f,o as h,h as s,U as g,N as o,M as y,Q as H,K as d,O as w,T as C,$ as j,j as u,aF as $,P as z,aG as A,al as v,F as b,R as D,am as V,ak as P,ao as T,m as J,W as _,aH as U,S,av as F,Z as x,aq as B,aI as q,Y as p}from"./index-DKqePUrh.js";import{V as R,a as M}from"./VRow-MTxZhg05.js";import{V as k}from"./VSpacer-e-NAsH-v.js";import{V as W}from"./VSelect-TxQAoKSE.js";import{V as N}from"./VSheet-BWqVDIER.js";import{V as G}from"./VAlert-BWO0ySXb.js";import{V as K}from"./VForm-BVXfDvnz.js";import{V as Q}from"./VTextField-i-JnkifG.js";import{V as X}from"./VTextarea-CNLlxTZD.js";import{V as E}from"./VDialog-DDRRILQ3.js";/* empty css              */import"./VInput-yqi59OEB.js";import"./VCheckboxBtn-BBpyMeCr.js";import"./VSelectionControl-DIpHOvtW.js";/* empty css                   */const Y={name:"ProjectEditor",components:{MonacoEditorComponent:I},data(){return{project:null,fileContent:null,fileSha256:null,branches:[],currentBranch:"main",commits:[],accessFileToken:"",loading:!0,loadingMessage:"加载项目信息...",codeChanged:!1,errorMessage:"",showSaveDialog:!1,showHistoryDialog:!1,showHistorySidebar:!1,commitMessage:"",commitDescription:"",loadingHistory:!1,editorOptions:{theme:"vs-dark",language:"javascript",fontSize:14,tabSize:2,minimap:{enabled:!0},scrollBeyondLastLine:!1,automaticLayout:!0,wordWrap:"on",lineNumbers:"on",glyphMargin:!0,folding:!0,lineDecorationsWidth:10,lineNumbersMinChars:3}}},computed:{projectId(){return this.$route.query.id},projectNamespace(){const i=this.$route.params.username||this.$route.query.username,e=this.$route.params.projectname||this.$route.query.projectname;return i&&e?`${i}/${e}`:null}},watch:{currentBranch:async function(){this.showHistorySidebar&&await this.loadCommitHistory()},project:async function(i){i&&i.id&&await this.loadCommitHistory()}},mounted(){this.loadProject()},methods:{async loadProject(){var i;try{this.loading=!0,this.loadingMessage="加载项目信息...";let e;if(this.projectId)console.log("通过ID加载项目:",this.projectId),e=await p.get(`/project/id/${this.projectId}`);else if(this.projectNamespace){console.log("通过命名空间加载项目:",this.projectNamespace);const[l,n]=this.projectNamespace.split("/");e=await p.get(`/project/namespace/${l}/${n}`)}else throw new Error("未提供项目ID或命名空间");if(console.log("项目加载响应:",e.data),e.data.status==="success"||e.data.id){if(this.project=e.data.data||e.data,!this.project||!this.project.id)throw new Error("项目数据无效: "+JSON.stringify(this.project));await this.loadBranches(),await this.loadLatestCommit()}else throw new Error(e.data.message||"加载项目失败: 服务器未返回有效数据")}catch(e){console.error("加载项目失败:",e);const l=e.response?`服务器错误 (${e.response.status}): ${((i=e.response.data)==null?void 0:i.message)||"未知错误"}`:e.message||"网络错误或服务器无响应";this.loadingMessage=`加载失败: ${l}`,this.errorMessage=l,this.loading=!1}},async loadBranches(){var i;try{this.loadingMessage="加载分支信息...",console.log("加载分支, 项目ID:",this.project.id);const e=await p.get(`/project/branches?projectid=${this.project.id}`);if(console.log("分支加载响应:",e.data),e.data.status==="success")if(this.branches=e.data.data||[],this.branches.length>0)this.currentBranch=this.branches[0].name;else throw new Error("项目没有任何分支");else throw new Error(e.data.message||"加载分支失败: 服务器未返回有效数据")}catch(e){console.error("加载分支失败:",e);const l=e.response?`服务器错误 (${e.response.status}): ${((i=e.response.data)==null?void 0:i.message)||"未知错误"}`:e.message||"网络错误或服务器无响应";this.loadingMessage=`加载分支失败: ${l}`,this.errorMessage=l,this.loading=!1}},async loadLatestCommit(){var i,e,l,n;try{this.loadingMessage="加载最新代码...",console.log("加载最新提交, 项目ID:",this.project.id,"分支:",this.currentBranch);const t=await p.get(`/project/${this.project.id}/${this.currentBranch}/latest`);if(console.log("最新提交响应:",t.data),t.data.status==="success"){if(!t.data.accessFileToken)throw new Error("服务器未返回文件访问令牌");if(this.accessFileToken=t.data.accessFileToken,!t.data.commit)throw new Error("服务器返回的提交数据无效");const r=t.data.commit.commit_file;if(console.log(`获取提交文件: ${r}`),!r){console.log("没有提交文件，创建新文件"),this.fileContent="",this.loading=!1;return}try{const c=await p.get(`/project/files/${r}?accessFileToken=${this.accessFileToken}&content=true`);if(console.log("提交文件响应:",c),c.status===200){let a=c.data;if(!a)console.log("文件内容为空，创建新文件"),this.fileContent="";else{typeof a=="object"&&(a=JSON.stringify(a,null,2)),console.log("获取到文件内容，长度:",a.length),this.fileContent=a,this.fileSha256=r;const m=this.project.name||"file.js";this.editorOptions.language=this.detectLanguage(a,m)}this.loading=!1}else{const a=((i=c.data)==null?void 0:i.message)||"未知错误";console.error(`获取提交文件失败: ${r}`,c.data),this.fileContent="",this.loading=!1}}catch(c){console.error("获取提交文件请求失败:",c),this.fileContent="",this.loading=!1}}else throw new Error(t.data.message||"加载最新提交失败: 服务器未返回有效数据")}catch(t){console.error("加载最新提交失败:",t);const r=t.response?`服务器错误 (${t.response.status}): ${((e=t.response.data)==null?void 0:e.message)||"未知错误"}`:`${t.message||"网络错误或服务器无响应"} [${((n=(l=t.stack)==null?void 0:l.split(`
`)[1])==null?void 0:n.trim())||"未知位置"}]`;this.loadingMessage=`加载最新提交失败: ${r}`,this.errorMessage=r,this.fileContent="",this.loading=!1}},async saveAndCommitCode(){if(this.fileContent===null){alert("文件内容未加载");return}this.showSaveDialog=!0},async saveAndSubmitCommit(){var i,e;if(!this.commitMessage.trim()){alert("请输入提交信息");return}try{this.loading=!0,this.loadingMessage="保存并提交代码...",this.showSaveDialog=!1;let l=this.fileContent,n=!1;try{JSON.parse(l),n=!0,console.log("内容已经是有效的JSON格式")}catch{console.log("内容不是有效的JSON格式，将直接发送"),n=!1}console.log("准备保存文件，内容长度:",l.length);const t=await p.post("/project/savefile",n?l:JSON.stringify({index:this.fileContent}),{headers:{"Content-Type":"application/json","X-Project-ID":this.project.id}});if(console.log("保存文件响应:",t.data),t.data.status!=="success")throw new Error(t.data.message||"保存文件失败");if(this.accessFileToken=t.data.accessFileToken,!this.fileSha256)throw console.error("没有文件SHA256信息"),new Error("没有文件SHA256信息，无法完成提交");console.log("文件保存成功，使用SHA256:",this.fileSha256),console.log("准备提交代码，分支:",this.currentBranch);const r={branch:this.currentBranch,projectid:this.project.id,accessFileToken:this.accessFileToken,message:this.commitMessage,commit_description:this.commitDescription,commit_file:this.fileSha256};console.log("提交数据:",r);const c=await p.put(`/project/commit/id/${this.project.id}`,r);if(console.log("提交响应:",c.data),c.data.status==="success")this.commitMessage="",this.commitDescription="",this.codeChanged=!1,await this.loadCommitHistory(),alert("代码保存并提交成功"+(n?"":" (已转换为JSON格式)"));else throw new Error(c.data.message||"提交代码失败")}catch(l){console.error("保存并提交代码失败:",l),alert("保存并提交代码失败: "+(((e=(i=l.response)==null?void 0:i.data)==null?void 0:e.message)||l.message||"未知错误"))}finally{this.loading=!1}},async loadCommitHistory(){if(!this.project||!this.project.id){console.error("项目未加载，无法获取提交历史");return}try{this.loadingHistory=!0;const i=await p.get(`/project/commits?projectid=${this.project.id}&branch=${this.currentBranch}`);i.data.status==="success"?(this.commits=i.data.data||[],this.commits=this.commits.map(e=>({...e,hash:e.hash||"unknown",message:e.message||"无提交信息",date:e.date||new Date().toISOString(),author:e.author||{username:"未知用户"}}))):console.error("加载提交历史失败:",i.data.message)}catch(i){console.error("加载提交历史失败:",i)}finally{this.loadingHistory=!1}},async showHistory(){try{await this.loadCommitHistory(),this.showHistoryDialog=!0}catch(i){console.error("显示历史对话框失败:",i),alert("加载提交历史失败: "+(i.message||"未知错误"))}},async toggleHistorySidebar(){this.showHistorySidebar=!this.showHistorySidebar,this.showHistorySidebar&&this.commits.length===0&&await this.loadCommitHistory()},formatCommitInfo(i){var n;if(!i)return"未知提交信息";const e=((n=i.author)==null?void 0:n.username)||"未知用户",l=i.date?this.formatDate(i.date):"未知时间";return`${e} · ${l}`},async viewCommit(i){var e,l,n,t;if(!i||!i.hash){alert("无效的提交信息");return}try{this.loading=!0,this.loadingMessage="加载提交详情...";const r=await p.get(`/project/commit?projectid=${this.project.id}&commitid=${i.hash}`);if(r.data.status==="success"){this.accessFileToken=r.data.accessFileToken;const c=r.data.commit.commit_file;if(console.log(`获取提交文件: ${c}`),!c){console.log("没有提交文件，创建空文件"),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1;return}try{const a=await p.get(`/project/files/${c}?accessFileToken=${this.accessFileToken}&content=true`);if(a.status===200){let m=a.data;if(!m)console.log("文件内容为空，创建新文件"),this.fileContent="";else{typeof m=="object"&&(m=JSON.stringify(m,null,2)),console.log("获取到文件内容，长度:",m.length),this.fileContent=m,this.fileSha256=c;const L=this.project.name||"file.js";this.editorOptions.language=this.detectLanguage(m,L)}this.showHistoryDialog=!1,this.loading=!1}else{const m=((e=a.data)==null?void 0:e.message)||"未知错误";console.error(`获取提交文件失败: ${c}`,a.data),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1}}catch(a){console.error("获取提交文件请求失败:",a),this.fileContent="",this.showHistoryDialog=!1,this.loading=!1}}else throw new Error(r.data.message||"加载提交详情失败")}catch(r){console.error("加载提交详情失败:",r);const c=r.response?`服务器错误 (${r.response.status}): ${((l=r.response.data)==null?void 0:l.message)||"未知错误"}`:`${r.message||"网络错误或服务器无响应"} [${((t=(n=r.stack)==null?void 0:n.split(`
`)[1])==null?void 0:t.trim())||"未知位置"}]`;alert("加载提交详情失败: "+c),this.loading=!1}},async restoreCommit(i){var l,n;if(!i||!i.hash){alert("无效的提交信息");return}const e=i.hash.substring(0,7);if(confirm(`确定要恢复到提交 ${e} 的状态吗？`))try{this.loading=!0,this.loadingMessage="恢复提交...",await this.viewCommit(i);const t=await p.put(`/project/commit/id/${this.project.id}`,{branch:this.currentBranch,projectid:this.project.id,accessFileToken:this.accessFileToken,message:`恢复到提交 ${e}`,commit_description:`恢复到提交 ${i.hash}，原提交信息: ${i.message||"无提交信息"}`,commit_file:this.fileSha256});if(t.data.status==="success")alert("代码恢复成功"),await this.loadCommitHistory();else throw new Error(t.data.message||"恢复代码失败")}catch(t){console.error("恢复代码失败:",t),alert("恢复代码失败: "+(((n=(l=t.response)==null?void 0:l.data)==null?void 0:n.message)||t.message||"未知错误"))}finally{this.loading=!1}},async switchBranch(){this.codeChanged?confirm("您有未保存的更改，是否切换分支？")?(await this.loadLatestCommit(),this.codeChanged=!1):this.currentBranch=this.branches.find(i=>i.name===this.currentBranch).name:await this.loadLatestCommit()},goToProjectPage(){this.project&&this.$router.push(`/${this.project.author.username}/${this.project.name}`)},formatDate(i){return new Date(i).toLocaleString()},async retryLoading(){this.errorMessage="",this.loading=!0,this.loadingMessage="重新加载项目...";try{await this.loadProject()}catch(i){this.errorMessage=i.message||"加载失败，请稍后再试"}},detectLanguage(i,e){try{return JSON.parse(i),"json"}catch{if(e){const n=e.split(".").pop().toLowerCase();return{js:"javascript",ts:"typescript",html:"html",css:"css",scss:"scss",less:"less",vue:"html",json:"json",md:"markdown",py:"python",java:"java",c:"c",cpp:"cpp",cs:"csharp",go:"go",php:"php",rb:"ruby",rs:"rust",sh:"shell",sql:"sql",xml:"xml",yaml:"yaml",yml:"yaml"}[n]||"plaintext"}}return"plaintext"}}},Z={key:0},ee={class:"text-caption"},te={class:"text-center"},se={key:1,class:"text-body-2"},oe={key:1,style:{height:"100%!important",width:"100%!important"}},ae={class:"d-flex"},ie={class:"text-body-1 mt-4"};function re(i,e,l,n,t,r){const c=I;return h(),f(b,null,[s($,{flat:"",density:"compact",class:"editor-app-bar"},{default:o(()=>[s(R,{"no-gutters":"",align:"center"},{default:o(()=>[s(M,{cols:"auto",class:"mr-4"},{default:o(()=>[t.project?(h(),f("div",Z,[s(H,{size:"small",color:"primary",class:"mr-2"},{default:o(()=>[s(w,{size:"small",start:""},{default:o(()=>e[12]||(e[12]=[d("mdi-source-repository")])),_:1}),d(" "+C(t.project.title),1)]),_:1}),y("span",ee,C(t.project.author.username)+"/"+C(t.project.name),1)])):(h(),g(j,{key:1,indeterminate:"",size:"20",width:"2"}))]),_:1}),s(k),s(M,{cols:"auto"},{default:o(()=>[s(W,{modelValue:t.currentBranch,"onUpdate:modelValue":[e[0]||(e[0]=a=>t.currentBranch=a),r.switchBranch],items:t.branches.map(a=>a.name),density:"compact","hide-details":"",variant:"outlined",class:"branch-selector","prepend-inner-icon":"mdi-source-branch",style:{"max-width":"150px"}},null,8,["modelValue","items","onUpdate:modelValue"])]),_:1}),s(M,{cols:"auto",class:"d-flex"},{default:o(()=>[s(u,{"prepend-icon":"mdi-content-save",variant:"text",size:"small",color:"success",onClick:r.saveAndCommitCode,class:"ml-2"},{default:o(()=>e[13]||(e[13]=[d(" 保存 ")])),_:1},8,["onClick"]),s(u,{"prepend-icon":"mdi-history",variant:"text",size:"small",onClick:r.toggleHistorySidebar,class:"ml-2",disabled:""},{default:o(()=>e[14]||(e[14]=[d(" 历史 ")])),_:1},8,["onClick"]),s(u,{"prepend-icon":"mdi-arrow-left",variant:"text",size:"small",onClick:r.goToProjectPage,class:"ml-2"},{default:o(()=>e[15]||(e[15]=[d(" 项目页面 ")])),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1}),s(U,{modelValue:t.showHistorySidebar,"onUpdate:modelValue":e[2]||(e[2]=a=>t.showHistorySidebar=a),location:"left",border:""},{default:o(()=>[s(z,{density:"compact"},{default:o(()=>[s(A,{class:"text-subtitle-1"},{default:o(()=>e[16]||(e[16]=[d("提交历史")])),_:1}),s(k),s(u,{icon:"",size:"small",onClick:e[1]||(e[1]=a=>t.showHistorySidebar=!1)},{default:o(()=>[s(w,null,{default:o(()=>e[17]||(e[17]=[d("mdi-close")])),_:1})]),_:1})]),_:1}),t.commits.length>0?(h(),g(v,{key:0},{default:o(()=>[(h(!0),f(b,null,D(t.commits,a=>(h(),g(V,{key:a.hash,title:a.message||"无提交信息",subtitle:r.formatCommitInfo(a),lines:"two",onClick:m=>r.viewCommit(a)},{prepend:o(()=>[s(_,{size:"36"},{default:o(()=>[s(w,null,{default:o(()=>e[18]||(e[18]=[d("mdi-source-commit")])),_:1})]),_:1})]),append:o(()=>[s(P,{location:"bottom"},{activator:o(({props:m})=>[s(u,J({icon:"",size:"small",ref_for:!0},m),{default:o(()=>[s(w,null,{default:o(()=>e[19]||(e[19]=[d("mdi-dots-vertical")])),_:1})]),_:2},1040)]),default:o(()=>[s(v,null,{default:o(()=>[s(V,{onClick:m=>r.viewCommit(a)},{default:o(()=>[s(T,null,{default:o(()=>e[20]||(e[20]=[d("查看")])),_:1})]),_:2},1032,["onClick"]),s(V,{onClick:m=>r.restoreCommit(a)},{default:o(()=>[s(T,null,{default:o(()=>e[21]||(e[21]=[d("恢复")])),_:1})]),_:2},1032,["onClick"])]),_:2},1024)]),_:2},1024)]),_:2},1032,["title","subtitle","onClick"]))),128))]),_:1})):(h(),g(N,{key:1,class:"d-flex align-center justify-center fill-height"},{default:o(()=>[y("div",te,[t.loadingHistory?(h(),g(j,{key:0,indeterminate:""})):(h(),f("p",se,"暂无提交历史"))])]),_:1}))]),_:1},8,["modelValue"]),t.errorMessage?(h(),g(G,{key:0,type:"error",closable:"",title:"加载错误",text:t.errorMessage,class:"ma-4"},{append:o(()=>[s(u,{color:"error",variant:"text",onClick:r.retryLoading},{default:o(()=>e[22]||(e[22]=[d(" 重试 ")])),_:1},8,["onClick"])]),_:1},8,["text"])):t.fileContent!==null?(h(),f("div",oe,[s(c,{modelValue:t.fileContent,"onUpdate:modelValue":e[3]||(e[3]=a=>t.fileContent=a),language:t.editorOptions.language,options:t.editorOptions,onChange:e[4]||(e[4]=a=>t.codeChanged=!0)},null,8,["modelValue","language","options"])])):(h(),g(N,{key:2,class:"d-flex align-center justify-center fill-height"},{default:o(()=>[s(j,{indeterminate:"",color:"primary"}),e[23]||(e[23]=y("span",{class:"ml-2"},"加载中...",-1))]),_:1})),s(E,{modelValue:t.showSaveDialog,"onUpdate:modelValue":e[8]||(e[8]=a=>t.showSaveDialog=a),"max-width":"600px"},{default:o(()=>[s(S,null,{default:o(()=>[s(F,{class:"text-h5"},{default:o(()=>e[24]||(e[24]=[d(" 保存更改 ")])),_:1}),s(x,null,{default:o(()=>[s(K,null,{default:o(()=>[s(Q,{modelValue:t.commitMessage,"onUpdate:modelValue":e[5]||(e[5]=a=>t.commitMessage=a),label:"提交信息",placeholder:"简短描述您的更改",variant:"outlined",required:""},null,8,["modelValue"]),s(X,{modelValue:t.commitDescription,"onUpdate:modelValue":e[6]||(e[6]=a=>t.commitDescription=a),label:"详细描述 (可选)",placeholder:"详细描述您的更改",variant:"outlined",rows:"4"},null,8,["modelValue"])]),_:1})]),_:1}),s(B,null,{default:o(()=>[s(k),s(u,{variant:"text",onClick:e[7]||(e[7]=a=>t.showSaveDialog=!1)},{default:o(()=>e[25]||(e[25]=[d(" 取消 ")])),_:1}),s(u,{color:"primary",variant:"flat",onClick:r.saveAndSubmitCommit},{default:o(()=>e[26]||(e[26]=[d(" 保存并提交 ")])),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(E,{modelValue:t.showHistoryDialog,"onUpdate:modelValue":e[10]||(e[10]=a=>t.showHistoryDialog=a),"max-width":"800px"},{default:o(()=>[s(S,null,{default:o(()=>[s(F,{class:"text-h5"},{default:o(()=>e[27]||(e[27]=[d(" 提交历史 ")])),_:1}),s(x,{class:"pa-0"},{default:o(()=>[s(v,{lines:"two"},{default:o(()=>[(h(!0),f(b,null,D(t.commits,a=>(h(),g(V,{key:a.hash,title:a.message||"无提交信息",subtitle:r.formatCommitInfo(a)},{prepend:o(()=>[s(_,{size:"36"},{default:o(()=>[s(w,null,{default:o(()=>e[28]||(e[28]=[d("mdi-source-commit")])),_:1})]),_:1})]),append:o(()=>[y("div",ae,[s(H,{size:"small",variant:"flat",class:"mr-2 monospace"},{default:o(()=>[d(C(a.hash?a.hash.substring(0,7):"unknown"),1)]),_:2},1024),s(u,{size:"small",color:"primary",variant:"text",onClick:m=>r.viewCommit(a)},{default:o(()=>e[29]||(e[29]=[d(" 查看 ")])),_:2},1032,["onClick"]),s(u,{size:"small",variant:"text",onClick:m=>r.restoreCommit(a)},{default:o(()=>e[30]||(e[30]=[d(" 恢复 ")])),_:2},1032,["onClick"])])]),_:2},1032,["title","subtitle"]))),128))]),_:1})]),_:1}),s(B,null,{default:o(()=>[s(k),s(u,{color:"primary",variant:"text",onClick:e[9]||(e[9]=a=>t.showHistoryDialog=!1)},{default:o(()=>e[31]||(e[31]=[d(" 关闭 ")])),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"]),s(q,{modelValue:t.loading,"onUpdate:modelValue":e[11]||(e[11]=a=>t.loading=a),class:"align-center justify-center",persistent:""},{default:o(()=>[s(S,{width:"300"},{default:o(()=>[s(x,{class:"text-center pa-4"},{default:o(()=>[s(j,{indeterminate:"",color:"primary",size:"64"}),y("div",ie,C(t.loadingMessage),1)]),_:1})]),_:1})]),_:1},8,["modelValue"])],64)}const ve=O(Y,[["render",re]]);export{ve as default};
