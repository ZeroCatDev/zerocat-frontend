import{J as a}from"./index-BCCQ0H2E.js";const s=t=>({id:t,title:"未知项目",description:"项目信息未缓存",authorid:0,type:"scratch",license:"unknow",state:"unknow",view_count:0,time:0,tags:[],source:"unknow"});async function p(t){if(Array.isArray(t))try{const{data:e}=await a.post("/project/batch",{projectIds:t});return e.data}catch{return t.map(r=>s(r))}else try{const{data:e}=await a.get(`/project/id/${t}`);return e}catch{return s(t)}}async function u(t,e){try{const{data:r}=await a.get(`/project/namespace/${t}/${e}`);return r}catch{return s(0)}}async function d(t){try{const{data:e}=await a.post(`/project/initlize?projectid=${t}`);return e}catch{return s(0)}}const l=async t=>(await a({url:"/project/savefile",data:{source:t},method:"post",headers:{"Content-Type":"application/json"}})).data,h=async(t,e)=>(await a({url:"/project/commit/id/"+t,data:{branch:e.branch,projectid:t,accessFileToken:e.accessFileToken,message:e.message,parent_commit:e.parent_commit},method:"put"})).data,m=async t=>(await a({url:`/project/branches?projectid=${t}`,method:"get"})).data,j=async(t,e,r)=>{const o=await a({url:`/project/${t}/${e}/${r}`,method:"get"}),c=o.data,n=await a({url:`/project/files/${c.commit.commit_file}?accessFileToken=${c.accessFileToken}`,method:"get"});return{projectFileData:c,fileData:n.data.file,branchInfo:o}},y=async(t,e,r)=>(await a({url:`/project/${t}/${e}/${r}`,method:"get"})).data,g=async(t,e)=>(await a({url:`/project/commits?projectid=${t}&branch=${e}`,method:"get"})).data;export{m as a,y as b,g as c,h as d,p as e,j as f,u as g,d as i,l as s};
