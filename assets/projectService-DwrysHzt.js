import{J as o}from"./index-BmoE2kT3.js";const m=t=>({id:t,title:"未知项目",description:"项目信息未缓存",authorid:0,type:"scratch",license:"unknow",state:"unknow",view_count:0,time:0,tags:[],source:"unknow"});async function l(t){if(Array.isArray(t))try{const{data:e}=await o.post("/project/batch",{projectIds:t});return e.data}catch{return t.map(r=>m(r))}else try{const{data:e}=await o.get(`/project/id/${t}`);return e}catch{return m(t)}}async function u(t,e){try{const{data:r}=await o.get(`/project/namespace/${t}/${e}`);return r}catch{return m(0)}}async function g(t){try{const{data:e}=await o.post(`/project/initlize?projectid=${t}`);return e}catch{return m(0)}}const h=async t=>(await o({url:"/project/savefile",data:{source:t},method:"post",headers:{"Content-Type":"application/json"}})).data,y=async(t,e)=>(await o({url:"/project/commit/id/"+t,data:{branch:e.branch,projectid:t,accessFileToken:e.accessFileToken,message:e.message,parent_commit:e.parent_commit},method:"put"})).data,j=async t=>(await o({url:`/project/branches?projectid=${t}`,method:"get"})).data,f=async(t,e,r)=>{const s=await o({url:`/project/${t}/${e}/${r}`,method:"get"}),c=s.data,p=await o({url:`/project/files/${c.commit.commit_file}?accessFileToken=${c.accessFileToken}`,method:"get"});return{projectFileData:c,fileData:p.data.file,branchInfo:s}},$=async(t,e)=>(await o({url:`/project/commits?projectid=${t}&branch=${e}`,method:"get"})).data,w=async(t,e)=>{console.log(`Fetching commits for projectId: ${t}`);const s=(await o({url:`/project/commits?projectid=${t}`,method:"get"})).data.data;console.log(`Fetched ${s.length} commits`);const c=n=>(console.log(`Finding commit by id: ${n}`),s.find(i=>i.id===n));return(n=>{console.log(`Building commit history starting from commitid: ${n}`);const i=[];let a=c(n);for(;a;){if(console.log(`Adding commit to history: ${a.id}`),i.push(a),!a.parent_commit_id){console.log(`No parent commit found for commitid: ${a.id}`);break}a=c(a.parent_commit_id)}return i})(e)};export{j as a,w as b,y as c,l as d,f as e,$ as f,u as g,g as i,h as s};
